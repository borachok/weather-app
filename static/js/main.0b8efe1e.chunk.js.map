{"version":3,"sources":["WeatherApp.js","reportWebVitals.js","index.js"],"names":["api","WeatherApp","useState","query","setQuery","weather","setWeather","useEffect","axios","get","params","address","key","then","res","curLocation","data","results","formatted_address","split","fetch","json","result","className","type","placeholder","onChange","e","target","value","onKeyPress","main","name","sys","country","temp","Math","round","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAIMA,EACC,mCADDA,EAEE,2CAyEOC,MAtEf,WAAuB,IAAD,EAEMC,mBAAS,IAFf,mBAEbC,EAFa,KAENC,EAFM,OAGUF,mBAAS,IAHnB,mBAGbG,EAHa,KAGJC,EAHI,KAuCpB,OAJAC,qBAAU,WA5BRC,IAAMC,IAAN,oDAA8D,CAC5DC,OAAQ,CACNC,QAHW,gBAIXC,IAAK,6CAGNC,MAAK,SAACC,GACL,IAAIC,EAAcD,EAAIE,KAAKC,QAAQ,GAAGC,kBAAkBC,MAAM,KAAK,GACnEC,MAAM,GAAD,OAAIpB,EAAJ,qBAAyBe,EAAzB,+BAA2Df,IAC7Da,MAAK,SAAAC,GAAG,OAAIA,EAAIO,UAChBR,MAAK,SAAAS,GACJhB,EAAWgB,WAmBnB,IAGA,mCACI,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,oBAAf,SACE,uBACEC,KAAK,OACLD,UAAU,cACVE,YAAY,YACZC,SAAU,SAAAC,GAAC,OAAIvB,EAASuB,EAAEC,OAAOC,QACjCA,MAAO1B,EACP2B,WAzBO,SAAAH,GACH,UAAVA,EAAEf,KACJQ,MAAM,GAAD,OAAIpB,EAAJ,qBAAyBG,EAAzB,+BAAqDH,IACvDa,MAAK,SAAAC,GAAG,OAAIA,EAAIO,UAChBR,MAAK,SAAAS,GACJhB,EAAWgB,GACXlB,EAAS,YAsBiB,oBAAhBC,EAAQ0B,KAChB,qCACE,qBAAKR,UAAU,qBAAf,SACE,sBAAKA,UAAU,gBAAf,UAAgClB,EAAQ2B,KAAxC,KAAgD3B,EAAQ4B,IAAIC,aAE9D,sBAAKX,UAAU,oBAAf,UACE,qBAAKA,UAAU,UAAf,SAA0BlB,EAAQA,QAAQ,GAAG0B,OAC7C,sBAAKR,UAAYlB,EAAQ0B,KAAKI,MAAQ,EAAK,sBAAwB,qBAAnE,UACGC,KAAKC,MAAMhC,EAAQ0B,KAAKI,MAD3B,iBAKD,SC7DAG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAE1BZ,M","file":"static/js/main.0b8efe1e.chunk.js","sourcesContent":["import React, { useState, useEffect} from 'react';\nimport axios from \"axios\";\nimport './weatherApp.scss'\n\nconst api = {\n  key: 'ae32f454ef5dd8e7a9ee217f4a88ba07',\n  base: 'https://api.openweathermap.org/data/2.5/'\n}\n\nfunction WeatherApp() {\n\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\n   const getGeolocation = () => {\n    let location = 'Ukraine, Lviv';\n    axios.get(`https://maps.googleapis.com/maps/api/geocode/json`,{\n      params: {\n        address: location,\n        key: 'AIzaSyBXsrgX-0OzPgfIcclmRfIJmfnqTqcTc9U'\n      }\n    })\n      .then((res) => {\n        let curLocation = res.data.results[0].formatted_address.split(',')[0];\n        fetch(`${api.base}weather?q=${curLocation}&units=metric&APPID=${api.key}`)\n          .then(res => res.json())\n          .then(result => {\n            setWeather(result);\n          });\n\n      })\n  }\n\n  const getWeather = e => {\n    if (e.key === 'Enter') {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n        .then(res => res.json())\n        .then(result => {\n          setWeather(result);\n          setQuery('');\n        });\n    }\n  }\n\n  useEffect(() => {\n    getGeolocation();\n  },[])\n\n  return (\n    <>\n        <div className=\"main\">\n          <div className=\"form__group field\">\n            <input\n              type=\"text\"\n              className='form__field'\n              placeholder='Search...'\n              onChange={e => setQuery(e.target.value)}\n              value={query}\n              onKeyPress={getWeather}\n            />\n          </div>\n          {(typeof  weather.main != 'undefined') ? (\n            <>\n              <div className=\"location-container\">\n                <div className=\"location-name\">{weather.name}, {weather.sys.country}</div>\n              </div>\n              <div className=\"weather-container\">\n                <div className=\"weather\">{weather.weather[0].main}</div>\n                <div className={(weather.main.temp <= 0) ? ' temperature coldBg' : 'temperature warmBg'}>\n                  {Math.round(weather.main.temp)}Â°c\n                </div>\n              </div>\n            </>\n          ) : ('')}\n        </div>\n    </>\n  );\n}\n\nexport default WeatherApp;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport WeatherApp from './WeatherApp';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <WeatherApp/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}